#pragma once

#include <iostream>
#include <new>

#pragma once

#include <iostream>
#include <new>

class Base
{
public:
	// this hides the normal global forms
	static void* operator new(std::size_t size, std::ostream& logStream) throw(std::bad_alloc)
	{
		return ::operator new(size);
	}
};


#pragma once

#include <new>
#include "Base03.h"

int main()
{
	// error! the normal form of operator new is hidden.
	//Base* pb = new Base;

	// fine, calls Base's placement new
	Base* pb = new (std::cerr) Base;

	return 0;
}