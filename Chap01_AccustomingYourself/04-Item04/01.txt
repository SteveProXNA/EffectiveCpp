09/11/2013

#include <list>
#include <string>

class PhoneNumber {};

class ABEntry
{
public:
	ABEntry(const std::string& name, const std::string& address, const std::list<PhoneNumber>& phones);

private:
	std::string theName;
	std::string theAddress;
	std::list<PhoneNumber> thePhones;
	int numTimesConsulted;
};


#include "ABEntry.h"

//03. Empty default-constructed values
ABEntry::ABEntry(const std::string& name, const std::string& address, const std::list<PhoneNumber>& phones) :
	theName(),
	theAddress(),
	thePhones(),
	numTimesConsulted(0)
{
}

//02. Initialization list.
//ABEntry::ABEntry(const std::string& name, const std::string& address, const std::list<PhoneNumber>& phones) :
//	theName(name),
//	theAddress(address),
//	thePhones(phones),
//	numTimesConsulted(0)
//{
//	// the ctor body is empty.
//}


//01. Assignments
//ABEntry::ABEntry(const std::string& name, const std::string& address, const std::list<PhoneNumber>& phones)
//{
//	// these are all assignments.
//	theName = name;
//	theAddress = address;
//	thePhones = phones;
//	numTimesConsulted = 0;
//}


#include "ABEntry.h"

int main()
{
	int x = 0;
	const char* text = "A C-style string";

	std::list<PhoneNumber> phones;
	ABEntry abEntry("name", "address", phones);
	return 0;
}